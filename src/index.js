/*
 * Mercantile API
 * Programmatic access to the Mercantile service
 *
 * OpenAPI spec version: v1
 * Contact: gurleen.singh@drexel.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/CartItem', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/Order', 'model/Product', 'model/ProductImage', 'api/AddressApi', 'api/ApiTokenAuthApi', 'api/CartApi', 'api/ImagesApi', 'api/OrderApi', 'api/ProductApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Address'), require('./model/CartItem'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/Order'), require('./model/Product'), require('./model/ProductImage'), require('./api/AddressApi'), require('./api/ApiTokenAuthApi'), require('./api/CartApi'), require('./api/ImagesApi'), require('./api/OrderApi'), require('./api/ProductApi'));
  }
}(function(ApiClient, Address, CartItem, InlineResponse200, InlineResponse2001, InlineResponse2002, InlineResponse2003, InlineResponse2004, Order, Product, ProductImage, AddressApi, ApiTokenAuthApi, CartApi, ImagesApi, OrderApi, ProductApi) {
  'use strict';

  /**
   * Programmatic_access_to_the_Mercantile_service.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MercantileApi = require('index'); // See note below*.
   * var xxxSvc = new MercantileApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MercantileApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MercantileApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MercantileApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The CartItem model constructor.
     * @property {module:model/CartItem}
     */
    CartItem: CartItem,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The ProductImage model constructor.
     * @property {module:model/ProductImage}
     */
    ProductImage: ProductImage,
    /**
     * The AddressApi service constructor.
     * @property {module:api/AddressApi}
     */
    AddressApi: AddressApi,
    /**
     * The ApiTokenAuthApi service constructor.
     * @property {module:api/ApiTokenAuthApi}
     */
    ApiTokenAuthApi: ApiTokenAuthApi,
    /**
     * The CartApi service constructor.
     * @property {module:api/CartApi}
     */
    CartApi: CartApi,
    /**
     * The ImagesApi service constructor.
     * @property {module:api/ImagesApi}
     */
    ImagesApi: ImagesApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The ProductApi service constructor.
     * @property {module:api/ProductApi}
     */
    ProductApi: ProductApi
  };

  return exports;
}));
